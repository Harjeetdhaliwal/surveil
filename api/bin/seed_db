#!/usr/bin/env node

(async function() {
  const {
    Organization,
    User,
    Team,
    ActivityStream,
    ActivityProfile,
    ActivityProfileItem,
  } = require("../src/models");

  // Add user "Jeff Bezos" with owner "Amazon"
  const jeffBezos = await User.create({
    firstName: "Jeff",
    lastName: "Bezos",
    isAdmin: true,
  });

  const amazon = await Organization.create({
    name: "Amazon",
    ownerId: jeffBezos.id,
  });

  jeffBezos.organizationId = amazon.id;
  await jeffBezos.save();

  // Add managers "John Doe" and "Jane Doe" to "Amazon"
  const johnDoe = await User.create({
    firstName: "John",
    lastName: "Doe",
    organizationId: amazon.id,
    isManager: true,
  });

  const janeDoe = await User.create({
    firstName: "Jane",
    lastName: "Doe",
    organizationId: amazon.id,
    isManager: true,
  });

  // Add teams "Data Science" and "Front-end Web Development" to "Amazon"
  const dataScienceTeam = await Team.create({
    name: "Data Science",
    managerId: johnDoe.id,
  });

  const frontEndTeam = await Team.create({
    name: "Front-end Web Development",
    managerId: janeDoe.id,
  });

  // Auto-generate activity profiles
  const goodCommonSites = [
    { title: "stackoverflow.com", name: "StackOverflow" },
    { title: "stackexchange.com", name: "StackExchange" },
    { title: "github.com", name: "Github" },
    { title: "google.com", name: "Google" }
  ];
  const goodDataScienceSites = [
    ...goodCommonSites,
    { title: "www.tensorflow.org", name: "Tensorflow" },
    { title: "www.reddit.com", name: "Reddit" },
    { title: "ai.google", name: "Google AI" },
    { title: "www.datarobot.com", name: "DataRobot | AI Cloud - The Next Generation of AI" },
  ];
  const goodFrontEndSites = [
    ...goodCommonSites,
    { title: "jsfiddle.org", name: "JSFiddle" },
    { title: "draw.io", name: "Draw.io" },
    { title: "lucidchart.com", name: "LucidChart" },
    { title: "developer.mozilla.org", name: "MDN Web Docs" },
    { title: "reactjs.org", name: "React - A JavaScript library for building user interfaces" },
    { title: "css-tricks.com", name: "CSS-Tricks" },
  ];

  const developerActivityProfile = await ActivityProfile.create({ name: "Developer" });
  const dataScienceActivityProfile = await ActivityProfile.create({ name: "Data Scientist" });
  const sitesActivityProfile = [
    [ goodFrontEndSites, developerActivityProfile ],
    [ goodDataScienceSites, dataScienceActivityProfile ],
  ];

  for (const [ sites, activityProfile ] of sitesActivityProfile) {
    for (const { name } of sites) {
      await ActivityProfileItem.create({
        name,
        expectedTime: 120,
        activityProfileId: activityProfile.id,
      });
    }
  }

  // Add employees to "Data Science"
  const makeAccountEmployeeData = (firstName, lastName) => ({
    firstName,
    lastName,
    teamId: dataScienceTeam.id,
    organizationId: amazon.id,
    activityProfileId: dataScienceActivityProfile.id,
  });

  const dataScienceEmployees = await User.bulkCreate([
    makeAccountEmployeeData("Edward", "Baker"),
    makeAccountEmployeeData("Neil", "Morgan"),
    makeAccountEmployeeData("Stephanie", "Watson"),
    makeAccountEmployeeData("Bernadette", "Arnold"),
    makeAccountEmployeeData("Gabrielle", "Cameron"),
  ]);

  // Add employees to "Front-end Web Development"
  const makeFrontEndEmployeeData = (firstName, lastName) => ({
    firstName,
    lastName,
    teamId: frontEndTeam.id,
    organizationId: amazon.id,
    activityProfileId: developerActivityProfile.id,
  });

  const frontEndEmployees = await User.bulkCreate([
    makeFrontEndEmployeeData("Fred", "Massey"),
    makeFrontEndEmployeeData("Manuel", "Greene"),
    makeFrontEndEmployeeData("Heather", "Savard"),
    makeFrontEndEmployeeData("Rene", "Lu"),
    makeFrontEndEmployeeData("Matt", "Hamilton"),
  ]);

  const unproductiveSites = [
    { title: "www.tumblr.com", name: "Tumblr" },
    { title: "www.facebook.com", name: "Facebook" },
    { title: "twitter.com", name: "Twitter. It's what's happening / Twitter" },
    { title: "www.buzzfeed.com", name: "BuzzFeed" },
    { title: "pinterest.com", name: "Pinterest" },
    { title: "imgur.com", name: "Imgur: The magic of the internet" },
    { title: "9gag.com", name: "9GAG: Go Fun The World" },
    { title: "www.twitch.tv", name: "Twitch" },
  ];

  const randomRangeInt = (start, end) => {
    return start + Math.floor(Math.random() * (end - start));
  };

  const randomElementUniform = arr => {
    return arr[randomRangeInt(0, arr.length - 1)];
  };

  const sitesWithUnproductiveMix = sites => {
    const numUnproductiveSites = randomRangeInt(0, unproductiveSites.length - 1);
    
    const includedUnproductiveSites = [];

    while (includedUnproductiveSites.length !== numUnproductiveSites) {
      const idx = randomRangeInt(0, unproductiveSites.length - 1);
      if (!includedUnproductiveSites.includes(idx)) {
        includedUnproductiveSites.push(idx);
      }
    }

    return [ ...sites, ...includedUnproductiveSites.map(idx => unproductiveSites[idx]) ];
  };

  const generateActivityStream = async function(user, sites) {
    const activityStreamsData = [];
    const nowDate = new Date();

    const runningDate = new Date();
    runningDate.setMonth(runningDate.getMonth() - 1);

    while (runningDate < nowDate) {
      const site = randomElementUniform(sites);
      const duration = randomRangeInt(160, 320);

      const startTime = new Date(runningDate.getTime());
      runningDate.setMinutes(runningDate.getMinutes() + duration);
      const endTime = new Date(runningDate.getTime());

      activityStreamsData.push({
        name: site.name,
        title: site.title,
        startTime,
        endTime,
        userId: user.id,
      });
    }

    await ActivityStream.bulkCreate(activityStreamsData);
  };

  for (const employee of dataScienceEmployees) {
    await generateActivityStream(employee, sitesWithUnproductiveMix(goodDataScienceSites));
  }

  for (const employee of frontEndEmployees) {
    await generateActivityStream(employee, sitesWithUnproductiveMix(goodFrontEndSites));
  }
})();